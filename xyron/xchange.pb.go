// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.1
// source: xchange.proto

package xyron

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalId string `protobuf:"bytes,1,opt,name=internalId,proto3" json:"internalId,omitempty"`
}

func (x *PlayerReceipt) Reset() {
	*x = PlayerReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerReceipt) ProtoMessage() {}

func (x *PlayerReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerReceipt.ProtoReflect.Descriptor instead.
func (*PlayerReceipt) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerReceipt) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

type TimestampedReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WildcardReportData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TimestampedReportData) Reset() {
	*x = TimestampedReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimestampedReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampedReportData) ProtoMessage() {}

func (x *TimestampedReportData) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampedReportData.ProtoReflect.Descriptor instead.
func (*TimestampedReportData) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{1}
}

func (x *TimestampedReportData) GetData() []*WildcardReportData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// timestamp->report data
	Data map[int64]*TimestampedReportData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddPlayerRequest) Reset() {
	*x = AddPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayerRequest) ProtoMessage() {}

func (x *AddPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayerRequest.ProtoReflect.Descriptor instead.
func (*AddPlayerRequest) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{2}
}

func (x *AddPlayerRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *AddPlayerRequest) GetData() map[int64]*TimestampedReportData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player  *PlayerReceipt `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Latency float64        `protobuf:"fixed64,2,opt,name=latency,proto3" json:"latency,omitempty"`
	// timestamp->report data
	Data map[int64]*TimestampedReportData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReportData) Reset() {
	*x = ReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportData) ProtoMessage() {}

func (x *ReportData) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportData.ProtoReflect.Descriptor instead.
func (*ReportData) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{3}
}

func (x *ReportData) GetPlayer() *PlayerReceipt {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *ReportData) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

func (x *ReportData) GetData() map[int64]*TimestampedReportData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Judgements []*JudgementData `protobuf:"bytes,1,rep,name=judgements,proto3" json:"judgements,omitempty"`
}

func (x *ReportResponse) Reset() {
	*x = ReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse) ProtoMessage() {}

func (x *ReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse.ProtoReflect.Descriptor instead.
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{4}
}

func (x *ReportResponse) GetJudgements() []*JudgementData {
	if x != nil {
		return x.Judgements
	}
	return nil
}

type BatchedReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ReportData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchedReportData) Reset() {
	*x = BatchedReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchedReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedReportData) ProtoMessage() {}

func (x *BatchedReportData) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedReportData.ProtoReflect.Descriptor instead.
func (*BatchedReportData) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{5}
}

func (x *BatchedReportData) GetData() []*ReportData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchedReportResponseEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player     *PlayerReceipt   `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Judgements []*JudgementData `protobuf:"bytes,2,rep,name=judgements,proto3" json:"judgements,omitempty"`
}

func (x *BatchedReportResponseEntry) Reset() {
	*x = BatchedReportResponseEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchedReportResponseEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedReportResponseEntry) ProtoMessage() {}

func (x *BatchedReportResponseEntry) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedReportResponseEntry.ProtoReflect.Descriptor instead.
func (*BatchedReportResponseEntry) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{6}
}

func (x *BatchedReportResponseEntry) GetPlayer() *PlayerReceipt {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *BatchedReportResponseEntry) GetJudgements() []*JudgementData {
	if x != nil {
		return x.Judgements
	}
	return nil
}

type BatchedReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*BatchedReportResponseEntry `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchedReportResponse) Reset() {
	*x = BatchedReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchedReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedReportResponse) ProtoMessage() {}

func (x *BatchedReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedReportResponse.ProtoReflect.Descriptor instead.
func (*BatchedReportResponse) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{7}
}

func (x *BatchedReportResponse) GetData() []*BatchedReportResponseEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

type JudgementData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Judgement Judgement `protobuf:"varint,2,opt,name=judgement,proto3,enum=xchange.Judgement" json:"judgement,omitempty"`
	Message   string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *JudgementData) Reset() {
	*x = JudgementData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchange_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgementData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgementData) ProtoMessage() {}

func (x *JudgementData) ProtoReflect() protoreflect.Message {
	mi := &file_xchange_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgementData.ProtoReflect.Descriptor instead.
func (*JudgementData) Descriptor() ([]byte, []int) {
	return file_xchange_proto_rawDescGZIP(), []int{8}
}

func (x *JudgementData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *JudgementData) GetJudgement() Judgement {
	if x != nil {
		return x.Judgement
	}
	return Judgement_DEBUG
}

func (x *JudgementData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_xchange_proto protoreflect.FileDescriptor

var file_xchange_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x68, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2f, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x15, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x57, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x01, 0x0a,
	0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x57, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x48, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3c, 0x0a, 0x11, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0a, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x50, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x6f, 0x0a, 0x0d, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0x98, 0x02, 0x0a, 0x09, 0x41, 0x6e, 0x74, 0x69, 0x63, 0x68, 0x65, 0x61,
	0x74, 0x12, 0x40, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19,
	0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x13, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x17, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x12, 0x1a, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x1e, 0x2e, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3d,
	0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x62, 0x6c, 0x61,
	0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x32, 0x30, 0x30, 0x2e, 0x78, 0x79, 0x72, 0x6f, 0x6e, 0x5a,
	0x06, 0x78, 0x79, 0x72, 0x6f, 0x6e, 0x2f, 0x88, 0x01, 0x01, 0xca, 0x02, 0x0d, 0x70, 0x72, 0x6f,
	0x6b, 0x69, 0x74, 0x73, 0x5c, 0x78, 0x79, 0x72, 0x6f, 0x6e, 0xd0, 0x02, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xchange_proto_rawDescOnce sync.Once
	file_xchange_proto_rawDescData = file_xchange_proto_rawDesc
)

func file_xchange_proto_rawDescGZIP() []byte {
	file_xchange_proto_rawDescOnce.Do(func() {
		file_xchange_proto_rawDescData = protoimpl.X.CompressGZIP(file_xchange_proto_rawDescData)
	})
	return file_xchange_proto_rawDescData
}

var file_xchange_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_xchange_proto_goTypes = []interface{}{
	(*PlayerReceipt)(nil),              // 0: xchange.PlayerReceipt
	(*TimestampedReportData)(nil),      // 1: xchange.TimestampedReportData
	(*AddPlayerRequest)(nil),           // 2: xchange.AddPlayerRequest
	(*ReportData)(nil),                 // 3: xchange.ReportData
	(*ReportResponse)(nil),             // 4: xchange.ReportResponse
	(*BatchedReportData)(nil),          // 5: xchange.BatchedReportData
	(*BatchedReportResponseEntry)(nil), // 6: xchange.BatchedReportResponseEntry
	(*BatchedReportResponse)(nil),      // 7: xchange.BatchedReportResponse
	(*JudgementData)(nil),              // 8: xchange.JudgementData
	nil,                                // 9: xchange.AddPlayerRequest.DataEntry
	nil,                                // 10: xchange.ReportData.DataEntry
	(*WildcardReportData)(nil),         // 11: xchange.WildcardReportData
	(*Player)(nil),                     // 12: xchange.Player
	(Judgement)(0),                     // 13: xchange.Judgement
	(*emptypb.Empty)(nil),              // 14: google.protobuf.Empty
}
var file_xchange_proto_depIdxs = []int32{
	11, // 0: xchange.TimestampedReportData.data:type_name -> xchange.WildcardReportData
	12, // 1: xchange.AddPlayerRequest.player:type_name -> xchange.Player
	9,  // 2: xchange.AddPlayerRequest.data:type_name -> xchange.AddPlayerRequest.DataEntry
	0,  // 3: xchange.ReportData.player:type_name -> xchange.PlayerReceipt
	10, // 4: xchange.ReportData.data:type_name -> xchange.ReportData.DataEntry
	8,  // 5: xchange.ReportResponse.judgements:type_name -> xchange.JudgementData
	3,  // 6: xchange.BatchedReportData.data:type_name -> xchange.ReportData
	0,  // 7: xchange.BatchedReportResponseEntry.player:type_name -> xchange.PlayerReceipt
	8,  // 8: xchange.BatchedReportResponseEntry.judgements:type_name -> xchange.JudgementData
	6,  // 9: xchange.BatchedReportResponse.data:type_name -> xchange.BatchedReportResponseEntry
	13, // 10: xchange.JudgementData.judgement:type_name -> xchange.Judgement
	1,  // 11: xchange.AddPlayerRequest.DataEntry.value:type_name -> xchange.TimestampedReportData
	1,  // 12: xchange.ReportData.DataEntry.value:type_name -> xchange.TimestampedReportData
	2,  // 13: xchange.Anticheat.AddPlayer:input_type -> xchange.AddPlayerRequest
	0,  // 14: xchange.Anticheat.RemovePlayer:input_type -> xchange.PlayerReceipt
	3,  // 15: xchange.Anticheat.Report:input_type -> xchange.ReportData
	5,  // 16: xchange.Anticheat.ReportBatched:input_type -> xchange.BatchedReportData
	0,  // 17: xchange.Anticheat.AddPlayer:output_type -> xchange.PlayerReceipt
	14, // 18: xchange.Anticheat.RemovePlayer:output_type -> google.protobuf.Empty
	4,  // 19: xchange.Anticheat.Report:output_type -> xchange.ReportResponse
	7,  // 20: xchange.Anticheat.ReportBatched:output_type -> xchange.BatchedReportResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_xchange_proto_init() }
func file_xchange_proto_init() {
	if File_xchange_proto != nil {
		return
	}
	file_player_wrappers_proto_init()
	file_player_proto_init()
	file_anticheat_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_xchange_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimestampedReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchedReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchedReportResponseEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchedReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchange_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgementData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xchange_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xchange_proto_goTypes,
		DependencyIndexes: file_xchange_proto_depIdxs,
		MessageInfos:      file_xchange_proto_msgTypes,
	}.Build()
	File_xchange_proto = out.File
	file_xchange_proto_rawDesc = nil
	file_xchange_proto_goTypes = nil
	file_xchange_proto_depIdxs = nil
}
