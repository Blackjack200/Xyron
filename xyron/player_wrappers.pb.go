// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.2
// source: player_wrappers.proto

package xyron

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WildcardReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*WildcardReportData_ActionData
	//	*WildcardReportData_MoveData
	//	*WildcardReportData_PlaceBlockData
	//	*WildcardReportData_BreakBlockData
	//	*WildcardReportData_EatFoodData
	//	*WildcardReportData_AttackData
	//	*WildcardReportData_EffectData
	//	*WildcardReportData_GameModeData
	//	*WildcardReportData_MotionData
	//	*WildcardReportData_InputModeData
	//	*WildcardReportData_HeldItemChangeData
	Data isWildcardReportData_Data `protobuf_oneof:"data"`
}

func (x *WildcardReportData) Reset() {
	*x = WildcardReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WildcardReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WildcardReportData) ProtoMessage() {}

func (x *WildcardReportData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WildcardReportData.ProtoReflect.Descriptor instead.
func (*WildcardReportData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{0}
}

func (m *WildcardReportData) GetData() isWildcardReportData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *WildcardReportData) GetActionData() *PlayerActionData {
	if x, ok := x.GetData().(*WildcardReportData_ActionData); ok {
		return x.ActionData
	}
	return nil
}

func (x *WildcardReportData) GetMoveData() *PlayerMoveData {
	if x, ok := x.GetData().(*WildcardReportData_MoveData); ok {
		return x.MoveData
	}
	return nil
}

func (x *WildcardReportData) GetPlaceBlockData() *PlayerPlaceBlockData {
	if x, ok := x.GetData().(*WildcardReportData_PlaceBlockData); ok {
		return x.PlaceBlockData
	}
	return nil
}

func (x *WildcardReportData) GetBreakBlockData() *PlayerBreakBlockData {
	if x, ok := x.GetData().(*WildcardReportData_BreakBlockData); ok {
		return x.BreakBlockData
	}
	return nil
}

func (x *WildcardReportData) GetEatFoodData() *PlayerEatFoodData {
	if x, ok := x.GetData().(*WildcardReportData_EatFoodData); ok {
		return x.EatFoodData
	}
	return nil
}

func (x *WildcardReportData) GetAttackData() *PlayerAttackData {
	if x, ok := x.GetData().(*WildcardReportData_AttackData); ok {
		return x.AttackData
	}
	return nil
}

func (x *WildcardReportData) GetEffectData() *PlayerEffectData {
	if x, ok := x.GetData().(*WildcardReportData_EffectData); ok {
		return x.EffectData
	}
	return nil
}

func (x *WildcardReportData) GetGameModeData() *PlayerGameModeData {
	if x, ok := x.GetData().(*WildcardReportData_GameModeData); ok {
		return x.GameModeData
	}
	return nil
}

func (x *WildcardReportData) GetMotionData() *PlayerMotionData {
	if x, ok := x.GetData().(*WildcardReportData_MotionData); ok {
		return x.MotionData
	}
	return nil
}

func (x *WildcardReportData) GetInputModeData() *PlayerInputModeData {
	if x, ok := x.GetData().(*WildcardReportData_InputModeData); ok {
		return x.InputModeData
	}
	return nil
}

func (x *WildcardReportData) GetHeldItemChangeData() *PlayerHeldItemChangeData {
	if x, ok := x.GetData().(*WildcardReportData_HeldItemChangeData); ok {
		return x.HeldItemChangeData
	}
	return nil
}

type isWildcardReportData_Data interface {
	isWildcardReportData_Data()
}

type WildcardReportData_ActionData struct {
	ActionData *PlayerActionData `protobuf:"bytes,1,opt,name=action_data,json=actionData,proto3,oneof"`
}

type WildcardReportData_MoveData struct {
	MoveData *PlayerMoveData `protobuf:"bytes,2,opt,name=move_data,json=moveData,proto3,oneof"`
}

type WildcardReportData_PlaceBlockData struct {
	PlaceBlockData *PlayerPlaceBlockData `protobuf:"bytes,3,opt,name=place_block_data,json=placeBlockData,proto3,oneof"`
}

type WildcardReportData_BreakBlockData struct {
	BreakBlockData *PlayerBreakBlockData `protobuf:"bytes,4,opt,name=break_block_data,json=breakBlockData,proto3,oneof"`
}

type WildcardReportData_EatFoodData struct {
	EatFoodData *PlayerEatFoodData `protobuf:"bytes,5,opt,name=eat_food_data,json=eatFoodData,proto3,oneof"`
}

type WildcardReportData_AttackData struct {
	AttackData *PlayerAttackData `protobuf:"bytes,6,opt,name=attack_data,json=attackData,proto3,oneof"`
}

type WildcardReportData_EffectData struct {
	EffectData *PlayerEffectData `protobuf:"bytes,7,opt,name=effect_data,json=effectData,proto3,oneof"`
}

type WildcardReportData_GameModeData struct {
	GameModeData *PlayerGameModeData `protobuf:"bytes,9,opt,name=game_mode_data,json=gameModeData,proto3,oneof"`
}

type WildcardReportData_MotionData struct {
	MotionData *PlayerMotionData `protobuf:"bytes,10,opt,name=motion_data,json=motionData,proto3,oneof"`
}

type WildcardReportData_InputModeData struct {
	InputModeData *PlayerInputModeData `protobuf:"bytes,11,opt,name=input_mode_data,json=inputModeData,proto3,oneof"`
}

type WildcardReportData_HeldItemChangeData struct {
	HeldItemChangeData *PlayerHeldItemChangeData `protobuf:"bytes,12,opt,name=held_item_change_data,json=heldItemChangeData,proto3,oneof"`
}

func (*WildcardReportData_ActionData) isWildcardReportData_Data() {}

func (*WildcardReportData_MoveData) isWildcardReportData_Data() {}

func (*WildcardReportData_PlaceBlockData) isWildcardReportData_Data() {}

func (*WildcardReportData_BreakBlockData) isWildcardReportData_Data() {}

func (*WildcardReportData_EatFoodData) isWildcardReportData_Data() {}

func (*WildcardReportData_AttackData) isWildcardReportData_Data() {}

func (*WildcardReportData_EffectData) isWildcardReportData_Data() {}

func (*WildcardReportData_GameModeData) isWildcardReportData_Data() {}

func (*WildcardReportData_MotionData) isWildcardReportData_Data() {}

func (*WildcardReportData_InputModeData) isWildcardReportData_Data() {}

func (*WildcardReportData_HeldItemChangeData) isWildcardReportData_Data() {}

type PlayerActionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *EntityPositionData `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Action   PlayerAction        `protobuf:"varint,2,opt,name=action,proto3,enum=xchange.PlayerAction" json:"action,omitempty"`
}

func (x *PlayerActionData) Reset() {
	*x = PlayerActionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerActionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionData) ProtoMessage() {}

func (x *PlayerActionData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionData.ProtoReflect.Descriptor instead.
func (*PlayerActionData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerActionData) GetPosition() *EntityPositionData {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerActionData) GetAction() PlayerAction {
	if x != nil {
		return x.Action
	}
	return PlayerAction_Jump
}

type PlayerMoveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewPosition *EntityPositionData `protobuf:"bytes,1,opt,name=newPosition,proto3" json:"newPosition,omitempty"`
	Teleport    bool                `protobuf:"varint,2,opt,name=teleport,proto3" json:"teleport,omitempty"`
}

func (x *PlayerMoveData) Reset() {
	*x = PlayerMoveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMoveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMoveData) ProtoMessage() {}

func (x *PlayerMoveData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMoveData.ProtoReflect.Descriptor instead.
func (*PlayerMoveData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerMoveData) GetNewPosition() *EntityPositionData {
	if x != nil {
		return x.NewPosition
	}
	return nil
}

func (x *PlayerMoveData) GetTeleport() bool {
	if x != nil {
		return x.Teleport
	}
	return false
}

type PlayerPlaceBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position    *EntityPositionData `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	PlacedBlock *BlockData          `protobuf:"bytes,2,opt,name=placedBlock,proto3" json:"placedBlock,omitempty"`
}

func (x *PlayerPlaceBlockData) Reset() {
	*x = PlayerPlaceBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPlaceBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPlaceBlockData) ProtoMessage() {}

func (x *PlayerPlaceBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPlaceBlockData.ProtoReflect.Descriptor instead.
func (*PlayerPlaceBlockData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerPlaceBlockData) GetPosition() *EntityPositionData {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerPlaceBlockData) GetPlacedBlock() *BlockData {
	if x != nil {
		return x.PlacedBlock
	}
	return nil
}

type PlayerBreakBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position    *EntityPositionData `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	BrokenBlock *BlockData          `protobuf:"bytes,2,opt,name=brokenBlock,proto3" json:"brokenBlock,omitempty"`
}

func (x *PlayerBreakBlockData) Reset() {
	*x = PlayerBreakBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBreakBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBreakBlockData) ProtoMessage() {}

func (x *PlayerBreakBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBreakBlockData.ProtoReflect.Descriptor instead.
func (*PlayerBreakBlockData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerBreakBlockData) GetPosition() *EntityPositionData {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerBreakBlockData) GetBrokenBlock() *BlockData {
	if x != nil {
		return x.BrokenBlock
	}
	return nil
}

type PlayerEatFoodData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConsumeStatus `protobuf:"varint,2,opt,name=status,proto3,enum=xchange.ConsumeStatus" json:"status,omitempty"`
}

func (x *PlayerEatFoodData) Reset() {
	*x = PlayerEatFoodData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEatFoodData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEatFoodData) ProtoMessage() {}

func (x *PlayerEatFoodData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEatFoodData.ProtoReflect.Descriptor instead.
func (*PlayerEatFoodData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerEatFoodData) GetStatus() ConsumeStatus {
	if x != nil {
		return x.Status
	}
	return ConsumeStatus_Start
}

type PlayerAttackData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AttackData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PlayerAttackData) Reset() {
	*x = PlayerAttackData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAttackData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAttackData) ProtoMessage() {}

func (x *PlayerAttackData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAttackData.ProtoReflect.Descriptor instead.
func (*PlayerAttackData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerAttackData) GetData() *AttackData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlayerEffectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Effect []*EffectFeature `protobuf:"bytes,1,rep,name=effect,proto3" json:"effect,omitempty"`
}

func (x *PlayerEffectData) Reset() {
	*x = PlayerEffectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEffectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEffectData) ProtoMessage() {}

func (x *PlayerEffectData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEffectData.ProtoReflect.Descriptor instead.
func (*PlayerEffectData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerEffectData) GetEffect() []*EffectFeature {
	if x != nil {
		return x.Effect
	}
	return nil
}

type PlayerGameModeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameMode GameMode `protobuf:"varint,1,opt,name=gameMode,proto3,enum=xchange.GameMode" json:"gameMode,omitempty"`
}

func (x *PlayerGameModeData) Reset() {
	*x = PlayerGameModeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGameModeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameModeData) ProtoMessage() {}

func (x *PlayerGameModeData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameModeData.ProtoReflect.Descriptor instead.
func (*PlayerGameModeData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerGameModeData) GetGameMode() GameMode {
	if x != nil {
		return x.GameMode
	}
	return GameMode_Survival
}

type PlayerMotionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Motion *Vec3F `protobuf:"bytes,1,opt,name=motion,proto3" json:"motion,omitempty"`
}

func (x *PlayerMotionData) Reset() {
	*x = PlayerMotionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMotionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMotionData) ProtoMessage() {}

func (x *PlayerMotionData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMotionData.ProtoReflect.Descriptor instead.
func (*PlayerMotionData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerMotionData) GetMotion() *Vec3F {
	if x != nil {
		return x.Motion
	}
	return nil
}

type PlayerInputModeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputMode InputMode `protobuf:"varint,1,opt,name=inputMode,proto3,enum=xchange.InputMode" json:"inputMode,omitempty"`
}

func (x *PlayerInputModeData) Reset() {
	*x = PlayerInputModeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInputModeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInputModeData) ProtoMessage() {}

func (x *PlayerInputModeData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInputModeData.ProtoReflect.Descriptor instead.
func (*PlayerInputModeData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{10}
}

func (x *PlayerInputModeData) GetInputMode() InputMode {
	if x != nil {
		return x.InputMode
	}
	return InputMode_MouseKeyboard
}

type PlayerHeldItemChangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ItemData `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *PlayerHeldItemChangeData) Reset() {
	*x = PlayerHeldItemChangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_wrappers_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerHeldItemChangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerHeldItemChangeData) ProtoMessage() {}

func (x *PlayerHeldItemChangeData) ProtoReflect() protoreflect.Message {
	mi := &file_player_wrappers_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerHeldItemChangeData.ProtoReflect.Descriptor instead.
func (*PlayerHeldItemChangeData) Descriptor() ([]byte, []int) {
	return file_player_wrappers_proto_rawDescGZIP(), []int{11}
}

func (x *PlayerHeldItemChangeData) GetItem() *ItemData {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_player_wrappers_proto protoreflect.FileDescriptor

var file_player_wrappers_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x1a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x06, 0x0a, 0x12, 0x57, 0x69, 0x6c, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x09, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x49, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a,
	0x10, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0d, 0x65, 0x61, 0x74, 0x5f,
	0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x61, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x65,
	0x61, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0b, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x0f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x56, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x48, 0x65, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x12, 0x68, 0x65, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x7a, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a,
	0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x3d, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x43, 0x0a, 0x11, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x45, 0x61, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x3b, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x10,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x22, 0x43, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x33, 0x66, 0x52, 0x06, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x47, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x41, 0x0a, 0x18, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x42, 0x3d, 0x0a,
	0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x32, 0x30, 0x30, 0x2e, 0x78, 0x79, 0x72, 0x6f, 0x6e, 0x5a, 0x06,
	0x78, 0x79, 0x72, 0x6f, 0x6e, 0x2f, 0x88, 0x01, 0x01, 0xca, 0x02, 0x0d, 0x70, 0x72, 0x6f, 0x6b,
	0x69, 0x74, 0x73, 0x5c, 0x78, 0x79, 0x72, 0x6f, 0x6e, 0xd0, 0x02, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_player_wrappers_proto_rawDescOnce sync.Once
	file_player_wrappers_proto_rawDescData = file_player_wrappers_proto_rawDesc
)

func file_player_wrappers_proto_rawDescGZIP() []byte {
	file_player_wrappers_proto_rawDescOnce.Do(func() {
		file_player_wrappers_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_wrappers_proto_rawDescData)
	})
	return file_player_wrappers_proto_rawDescData
}

var file_player_wrappers_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_player_wrappers_proto_goTypes = []interface{}{
	(*WildcardReportData)(nil),       // 0: xchange.WildcardReportData
	(*PlayerActionData)(nil),         // 1: xchange.PlayerActionData
	(*PlayerMoveData)(nil),           // 2: xchange.PlayerMoveData
	(*PlayerPlaceBlockData)(nil),     // 3: xchange.PlayerPlaceBlockData
	(*PlayerBreakBlockData)(nil),     // 4: xchange.PlayerBreakBlockData
	(*PlayerEatFoodData)(nil),        // 5: xchange.PlayerEatFoodData
	(*PlayerAttackData)(nil),         // 6: xchange.PlayerAttackData
	(*PlayerEffectData)(nil),         // 7: xchange.PlayerEffectData
	(*PlayerGameModeData)(nil),       // 8: xchange.PlayerGameModeData
	(*PlayerMotionData)(nil),         // 9: xchange.PlayerMotionData
	(*PlayerInputModeData)(nil),      // 10: xchange.PlayerInputModeData
	(*PlayerHeldItemChangeData)(nil), // 11: xchange.PlayerHeldItemChangeData
	(*EntityPositionData)(nil),       // 12: xchange.EntityPositionData
	(PlayerAction)(0),                // 13: xchange.PlayerAction
	(*BlockData)(nil),                // 14: xchange.BlockData
	(ConsumeStatus)(0),               // 15: xchange.ConsumeStatus
	(*AttackData)(nil),               // 16: xchange.AttackData
	(*EffectFeature)(nil),            // 17: xchange.EffectFeature
	(GameMode)(0),                    // 18: xchange.GameMode
	(*Vec3F)(nil),                    // 19: xchange.Vec3f
	(InputMode)(0),                   // 20: xchange.InputMode
	(*ItemData)(nil),                 // 21: xchange.ItemData
}
var file_player_wrappers_proto_depIdxs = []int32{
	1,  // 0: xchange.WildcardReportData.action_data:type_name -> xchange.PlayerActionData
	2,  // 1: xchange.WildcardReportData.move_data:type_name -> xchange.PlayerMoveData
	3,  // 2: xchange.WildcardReportData.place_block_data:type_name -> xchange.PlayerPlaceBlockData
	4,  // 3: xchange.WildcardReportData.break_block_data:type_name -> xchange.PlayerBreakBlockData
	5,  // 4: xchange.WildcardReportData.eat_food_data:type_name -> xchange.PlayerEatFoodData
	6,  // 5: xchange.WildcardReportData.attack_data:type_name -> xchange.PlayerAttackData
	7,  // 6: xchange.WildcardReportData.effect_data:type_name -> xchange.PlayerEffectData
	8,  // 7: xchange.WildcardReportData.game_mode_data:type_name -> xchange.PlayerGameModeData
	9,  // 8: xchange.WildcardReportData.motion_data:type_name -> xchange.PlayerMotionData
	10, // 9: xchange.WildcardReportData.input_mode_data:type_name -> xchange.PlayerInputModeData
	11, // 10: xchange.WildcardReportData.held_item_change_data:type_name -> xchange.PlayerHeldItemChangeData
	12, // 11: xchange.PlayerActionData.position:type_name -> xchange.EntityPositionData
	13, // 12: xchange.PlayerActionData.action:type_name -> xchange.PlayerAction
	12, // 13: xchange.PlayerMoveData.newPosition:type_name -> xchange.EntityPositionData
	12, // 14: xchange.PlayerPlaceBlockData.position:type_name -> xchange.EntityPositionData
	14, // 15: xchange.PlayerPlaceBlockData.placedBlock:type_name -> xchange.BlockData
	12, // 16: xchange.PlayerBreakBlockData.position:type_name -> xchange.EntityPositionData
	14, // 17: xchange.PlayerBreakBlockData.brokenBlock:type_name -> xchange.BlockData
	15, // 18: xchange.PlayerEatFoodData.status:type_name -> xchange.ConsumeStatus
	16, // 19: xchange.PlayerAttackData.data:type_name -> xchange.AttackData
	17, // 20: xchange.PlayerEffectData.effect:type_name -> xchange.EffectFeature
	18, // 21: xchange.PlayerGameModeData.gameMode:type_name -> xchange.GameMode
	19, // 22: xchange.PlayerMotionData.motion:type_name -> xchange.Vec3f
	20, // 23: xchange.PlayerInputModeData.inputMode:type_name -> xchange.InputMode
	21, // 24: xchange.PlayerHeldItemChangeData.item:type_name -> xchange.ItemData
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_player_wrappers_proto_init() }
func file_player_wrappers_proto_init() {
	if File_player_wrappers_proto != nil {
		return
	}
	file_player_proto_init()
	file_primitive_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_player_wrappers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WildcardReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerActionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMoveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPlaceBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerBreakBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerEatFoodData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAttackData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerEffectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGameModeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMotionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInputModeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_wrappers_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerHeldItemChangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_player_wrappers_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WildcardReportData_ActionData)(nil),
		(*WildcardReportData_MoveData)(nil),
		(*WildcardReportData_PlaceBlockData)(nil),
		(*WildcardReportData_BreakBlockData)(nil),
		(*WildcardReportData_EatFoodData)(nil),
		(*WildcardReportData_AttackData)(nil),
		(*WildcardReportData_EffectData)(nil),
		(*WildcardReportData_GameModeData)(nil),
		(*WildcardReportData_MotionData)(nil),
		(*WildcardReportData_InputModeData)(nil),
		(*WildcardReportData_HeldItemChangeData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_wrappers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_player_wrappers_proto_goTypes,
		DependencyIndexes: file_player_wrappers_proto_depIdxs,
		MessageInfos:      file_player_wrappers_proto_msgTypes,
	}.Build()
	File_player_wrappers_proto = out.File
	file_player_wrappers_proto_rawDesc = nil
	file_player_wrappers_proto_goTypes = nil
	file_player_wrappers_proto_depIdxs = nil
}
