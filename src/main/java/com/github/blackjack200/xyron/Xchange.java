// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xchange.proto

package com.github.blackjack200.xyron;

public final class Xchange {
  private Xchange() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlayerReceiptOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xchange.PlayerReceipt)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string internalId = 1;</code>
     * @return The internalId.
     */
    java.lang.String getInternalId();
    /**
     * <code>string internalId = 1;</code>
     * @return The bytes for internalId.
     */
    com.google.protobuf.ByteString
        getInternalIdBytes();
  }
  /**
   * Protobuf type {@code xchange.PlayerReceipt}
   */
  public static final class PlayerReceipt extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xchange.PlayerReceipt)
      PlayerReceiptOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlayerReceipt.newBuilder() to construct.
    private PlayerReceipt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerReceipt() {
      internalId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlayerReceipt();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReceipt_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReceipt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.blackjack200.xyron.Xchange.PlayerReceipt.class, com.github.blackjack200.xyron.Xchange.PlayerReceipt.Builder.class);
    }

    public static final int INTERNALID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object internalId_ = "";
    /**
     * <code>string internalId = 1;</code>
     * @return The internalId.
     */
    @java.lang.Override
    public java.lang.String getInternalId() {
      java.lang.Object ref = internalId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        internalId_ = s;
        return s;
      }
    }
    /**
     * <code>string internalId = 1;</code>
     * @return The bytes for internalId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInternalIdBytes() {
      java.lang.Object ref = internalId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        internalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(internalId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, internalId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(internalId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, internalId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.blackjack200.xyron.Xchange.PlayerReceipt)) {
        return super.equals(obj);
      }
      com.github.blackjack200.xyron.Xchange.PlayerReceipt other = (com.github.blackjack200.xyron.Xchange.PlayerReceipt) obj;

      if (!getInternalId()
          .equals(other.getInternalId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERNALID_FIELD_NUMBER;
      hash = (53 * hash) + getInternalId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.blackjack200.xyron.Xchange.PlayerReceipt prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xchange.PlayerReceipt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xchange.PlayerReceipt)
        com.github.blackjack200.xyron.Xchange.PlayerReceiptOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReceipt_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReceipt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.blackjack200.xyron.Xchange.PlayerReceipt.class, com.github.blackjack200.xyron.Xchange.PlayerReceipt.Builder.class);
      }

      // Construct using com.github.blackjack200.xyron.Xchange.PlayerReceipt.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalId_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReceipt_descriptor;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.PlayerReceipt getDefaultInstanceForType() {
        return com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.PlayerReceipt build() {
        com.github.blackjack200.xyron.Xchange.PlayerReceipt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.PlayerReceipt buildPartial() {
        com.github.blackjack200.xyron.Xchange.PlayerReceipt result = new com.github.blackjack200.xyron.Xchange.PlayerReceipt(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.github.blackjack200.xyron.Xchange.PlayerReceipt result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.internalId_ = internalId_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.blackjack200.xyron.Xchange.PlayerReceipt) {
          return mergeFrom((com.github.blackjack200.xyron.Xchange.PlayerReceipt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.blackjack200.xyron.Xchange.PlayerReceipt other) {
        if (other == com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance()) return this;
        if (!other.getInternalId().isEmpty()) {
          internalId_ = other.internalId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                internalId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object internalId_ = "";
      /**
       * <code>string internalId = 1;</code>
       * @return The internalId.
       */
      public java.lang.String getInternalId() {
        java.lang.Object ref = internalId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          internalId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string internalId = 1;</code>
       * @return The bytes for internalId.
       */
      public com.google.protobuf.ByteString
          getInternalIdBytes() {
        java.lang.Object ref = internalId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          internalId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string internalId = 1;</code>
       * @param value The internalId to set.
       * @return This builder for chaining.
       */
      public Builder setInternalId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        internalId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string internalId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInternalId() {
        internalId_ = getDefaultInstance().getInternalId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string internalId = 1;</code>
       * @param value The bytes for internalId to set.
       * @return This builder for chaining.
       */
      public Builder setInternalIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        internalId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xchange.PlayerReceipt)
    }

    // @@protoc_insertion_point(class_scope:xchange.PlayerReceipt)
    private static final com.github.blackjack200.xyron.Xchange.PlayerReceipt DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.blackjack200.xyron.Xchange.PlayerReceipt();
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReceipt getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerReceipt>
        PARSER = new com.google.protobuf.AbstractParser<PlayerReceipt>() {
      @java.lang.Override
      public PlayerReceipt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PlayerReceipt> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerReceipt> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.PlayerReceipt getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimestampedReportDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xchange.TimestampedReportData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    java.util.List<com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData> 
        getDataList();
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData getData(int index);
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    java.util.List<? extends com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code xchange.TimestampedReportData}
   */
  public static final class TimestampedReportData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xchange.TimestampedReportData)
      TimestampedReportDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimestampedReportData.newBuilder() to construct.
    private TimestampedReportData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimestampedReportData() {
      data_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TimestampedReportData();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_TimestampedReportData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_TimestampedReportData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.blackjack200.xyron.Xchange.TimestampedReportData.class, com.github.blackjack200.xyron.Xchange.TimestampedReportData.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData> data_;
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .xchange.WildcardReportData data = 1;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(1, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.blackjack200.xyron.Xchange.TimestampedReportData)) {
        return super.equals(obj);
      }
      com.github.blackjack200.xyron.Xchange.TimestampedReportData other = (com.github.blackjack200.xyron.Xchange.TimestampedReportData) obj;

      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.blackjack200.xyron.Xchange.TimestampedReportData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xchange.TimestampedReportData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xchange.TimestampedReportData)
        com.github.blackjack200.xyron.Xchange.TimestampedReportDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_TimestampedReportData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_TimestampedReportData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.blackjack200.xyron.Xchange.TimestampedReportData.class, com.github.blackjack200.xyron.Xchange.TimestampedReportData.Builder.class);
      }

      // Construct using com.github.blackjack200.xyron.Xchange.TimestampedReportData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_TimestampedReportData_descriptor;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.TimestampedReportData getDefaultInstanceForType() {
        return com.github.blackjack200.xyron.Xchange.TimestampedReportData.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.TimestampedReportData build() {
        com.github.blackjack200.xyron.Xchange.TimestampedReportData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.TimestampedReportData buildPartial() {
        com.github.blackjack200.xyron.Xchange.TimestampedReportData result = new com.github.blackjack200.xyron.Xchange.TimestampedReportData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.github.blackjack200.xyron.Xchange.TimestampedReportData result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(com.github.blackjack200.xyron.Xchange.TimestampedReportData result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.blackjack200.xyron.Xchange.TimestampedReportData) {
          return mergeFrom((com.github.blackjack200.xyron.Xchange.TimestampedReportData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.blackjack200.xyron.Xchange.TimestampedReportData other) {
        if (other == com.github.blackjack200.xyron.Xchange.TimestampedReportData.getDefaultInstance()) return this;
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData m =
                    input.readMessage(
                        com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          data_ = new java.util.ArrayList<com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData>(data_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public java.util.List<com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder setData(
          int index, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder setData(
          int index, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder addData(com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder addData(
          int index, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder addData(
          com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder addData(
          int index, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public java.util.List<? extends com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.getDefaultInstance());
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.getDefaultInstance());
      }
      /**
       * <code>repeated .xchange.WildcardReportData data = 1;</code>
       */
      public java.util.List<com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportData.Builder, com.github.blackjack200.xyron.PlayerWrappers.WildcardReportDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xchange.TimestampedReportData)
    }

    // @@protoc_insertion_point(class_scope:xchange.TimestampedReportData)
    private static final com.github.blackjack200.xyron.Xchange.TimestampedReportData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.blackjack200.xyron.Xchange.TimestampedReportData();
    }

    public static com.github.blackjack200.xyron.Xchange.TimestampedReportData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimestampedReportData>
        PARSER = new com.google.protobuf.AbstractParser<TimestampedReportData>() {
      @java.lang.Override
      public TimestampedReportData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TimestampedReportData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimestampedReportData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.TimestampedReportData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServerExecutionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xchange.ServerExecution)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string type = 1;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>string extraData = 2;</code>
     * @return The extraData.
     */
    java.lang.String getExtraData();
    /**
     * <code>string extraData = 2;</code>
     * @return The bytes for extraData.
     */
    com.google.protobuf.ByteString
        getExtraDataBytes();
  }
  /**
   * <pre>
   *TODO improve this
   * </pre>
   *
   * Protobuf type {@code xchange.ServerExecution}
   */
  public static final class ServerExecution extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xchange.ServerExecution)
      ServerExecutionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServerExecution.newBuilder() to construct.
    private ServerExecution(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerExecution() {
      type_ = "";
      extraData_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServerExecution();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ServerExecution_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ServerExecution_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.blackjack200.xyron.Xchange.ServerExecution.class, com.github.blackjack200.xyron.Xchange.ServerExecution.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object type_ = "";
    /**
     * <code>string type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTRADATA_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object extraData_ = "";
    /**
     * <code>string extraData = 2;</code>
     * @return The extraData.
     */
    @java.lang.Override
    public java.lang.String getExtraData() {
      java.lang.Object ref = extraData_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        extraData_ = s;
        return s;
      }
    }
    /**
     * <code>string extraData = 2;</code>
     * @return The bytes for extraData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExtraDataBytes() {
      java.lang.Object ref = extraData_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        extraData_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(extraData_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, extraData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(extraData_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, extraData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.blackjack200.xyron.Xchange.ServerExecution)) {
        return super.equals(obj);
      }
      com.github.blackjack200.xyron.Xchange.ServerExecution other = (com.github.blackjack200.xyron.Xchange.ServerExecution) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getExtraData()
          .equals(other.getExtraData())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + EXTRADATA_FIELD_NUMBER;
      hash = (53 * hash) + getExtraData().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.ServerExecution parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.blackjack200.xyron.Xchange.ServerExecution prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *TODO improve this
     * </pre>
     *
     * Protobuf type {@code xchange.ServerExecution}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xchange.ServerExecution)
        com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ServerExecution_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ServerExecution_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.blackjack200.xyron.Xchange.ServerExecution.class, com.github.blackjack200.xyron.Xchange.ServerExecution.Builder.class);
      }

      // Construct using com.github.blackjack200.xyron.Xchange.ServerExecution.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = "";
        extraData_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ServerExecution_descriptor;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.ServerExecution getDefaultInstanceForType() {
        return com.github.blackjack200.xyron.Xchange.ServerExecution.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.ServerExecution build() {
        com.github.blackjack200.xyron.Xchange.ServerExecution result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.ServerExecution buildPartial() {
        com.github.blackjack200.xyron.Xchange.ServerExecution result = new com.github.blackjack200.xyron.Xchange.ServerExecution(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.github.blackjack200.xyron.Xchange.ServerExecution result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.extraData_ = extraData_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.blackjack200.xyron.Xchange.ServerExecution) {
          return mergeFrom((com.github.blackjack200.xyron.Xchange.ServerExecution)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.blackjack200.xyron.Xchange.ServerExecution other) {
        if (other == com.github.blackjack200.xyron.Xchange.ServerExecution.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getExtraData().isEmpty()) {
          extraData_ = other.extraData_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                type_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                extraData_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <code>string type = 1;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        type_ = getDefaultInstance().getType();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object extraData_ = "";
      /**
       * <code>string extraData = 2;</code>
       * @return The extraData.
       */
      public java.lang.String getExtraData() {
        java.lang.Object ref = extraData_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          extraData_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string extraData = 2;</code>
       * @return The bytes for extraData.
       */
      public com.google.protobuf.ByteString
          getExtraDataBytes() {
        java.lang.Object ref = extraData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          extraData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string extraData = 2;</code>
       * @param value The extraData to set.
       * @return This builder for chaining.
       */
      public Builder setExtraData(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        extraData_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string extraData = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearExtraData() {
        extraData_ = getDefaultInstance().getExtraData();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string extraData = 2;</code>
       * @param value The bytes for extraData to set.
       * @return This builder for chaining.
       */
      public Builder setExtraDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        extraData_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xchange.ServerExecution)
    }

    // @@protoc_insertion_point(class_scope:xchange.ServerExecution)
    private static final com.github.blackjack200.xyron.Xchange.ServerExecution DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.blackjack200.xyron.Xchange.ServerExecution();
    }

    public static com.github.blackjack200.xyron.Xchange.ServerExecution getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerExecution>
        PARSER = new com.google.protobuf.AbstractParser<ServerExecution>() {
      @java.lang.Override
      public ServerExecution parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ServerExecution> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerExecution> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.ServerExecution getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddPlayerRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xchange.AddPlayerRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xchange.Player player = 1;</code>
     * @return Whether the player field is set.
     */
    boolean hasPlayer();
    /**
     * <code>.xchange.Player player = 1;</code>
     * @return The player.
     */
    com.github.blackjack200.xyron.PlayerOuterClass.Player getPlayer();
    /**
     * <code>.xchange.Player player = 1;</code>
     */
    com.github.blackjack200.xyron.PlayerOuterClass.PlayerOrBuilder getPlayerOrBuilder();

    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    int getDataCount();
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    boolean containsData(
        long key);
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
    getData();
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
    getDataMap();
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrDefault(
        long key,
        /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData defaultValue);
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrThrow(
        long key);
  }
  /**
   * Protobuf type {@code xchange.AddPlayerRequest}
   */
  public static final class AddPlayerRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xchange.AddPlayerRequest)
      AddPlayerRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AddPlayerRequest.newBuilder() to construct.
    private AddPlayerRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AddPlayerRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AddPlayerRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_AddPlayerRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_AddPlayerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.blackjack200.xyron.Xchange.AddPlayerRequest.class, com.github.blackjack200.xyron.Xchange.AddPlayerRequest.Builder.class);
    }

    public static final int PLAYER_FIELD_NUMBER = 1;
    private com.github.blackjack200.xyron.PlayerOuterClass.Player player_;
    /**
     * <code>.xchange.Player player = 1;</code>
     * @return Whether the player field is set.
     */
    @java.lang.Override
    public boolean hasPlayer() {
      return player_ != null;
    }
    /**
     * <code>.xchange.Player player = 1;</code>
     * @return The player.
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.PlayerOuterClass.Player getPlayer() {
      return player_ == null ? com.github.blackjack200.xyron.PlayerOuterClass.Player.getDefaultInstance() : player_;
    }
    /**
     * <code>.xchange.Player player = 1;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.PlayerOuterClass.PlayerOrBuilder getPlayerOrBuilder() {
      return player_ == null ? com.github.blackjack200.xyron.PlayerOuterClass.Player.getDefaultInstance() : player_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private static final class DataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>newDefaultInstance(
                  com.github.blackjack200.xyron.Xchange.internal_static_xchange_AddPlayerRequest_DataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.github.blackjack200.xyron.Xchange.TimestampedReportData.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> data_;
    private com.google.protobuf.MapField<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
    internalGetData() {
      if (data_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DataDefaultEntryHolder.defaultEntry);
      }
      return data_;
    }
    public int getDataCount() {
      return internalGetData().getMap().size();
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    @java.lang.Override
    public boolean containsData(
        long key) {

      return internalGetData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getData() {
      return getDataMap();
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getDataMap() {
      return internalGetData().getMap();
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrDefault(
        long key,
        /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData defaultValue) {

      java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
          internalGetData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrThrow(
        long key) {

      java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
          internalGetData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (player_ != null) {
        output.writeMessage(1, getPlayer());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetData(),
          DataDefaultEntryHolder.defaultEntry,
          2);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (player_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayer());
      }
      for (java.util.Map.Entry<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> entry
           : internalGetData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
        data__ = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, data__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.blackjack200.xyron.Xchange.AddPlayerRequest)) {
        return super.equals(obj);
      }
      com.github.blackjack200.xyron.Xchange.AddPlayerRequest other = (com.github.blackjack200.xyron.Xchange.AddPlayerRequest) obj;

      if (hasPlayer() != other.hasPlayer()) return false;
      if (hasPlayer()) {
        if (!getPlayer()
            .equals(other.getPlayer())) return false;
      }
      if (!internalGetData().equals(
          other.internalGetData())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer().hashCode();
      }
      if (!internalGetData().getMap().isEmpty()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.blackjack200.xyron.Xchange.AddPlayerRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xchange.AddPlayerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xchange.AddPlayerRequest)
        com.github.blackjack200.xyron.Xchange.AddPlayerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_AddPlayerRequest_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_AddPlayerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.blackjack200.xyron.Xchange.AddPlayerRequest.class, com.github.blackjack200.xyron.Xchange.AddPlayerRequest.Builder.class);
      }

      // Construct using com.github.blackjack200.xyron.Xchange.AddPlayerRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        player_ = null;
        if (playerBuilder_ != null) {
          playerBuilder_.dispose();
          playerBuilder_ = null;
        }
        internalGetMutableData().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_AddPlayerRequest_descriptor;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.AddPlayerRequest getDefaultInstanceForType() {
        return com.github.blackjack200.xyron.Xchange.AddPlayerRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.AddPlayerRequest build() {
        com.github.blackjack200.xyron.Xchange.AddPlayerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.AddPlayerRequest buildPartial() {
        com.github.blackjack200.xyron.Xchange.AddPlayerRequest result = new com.github.blackjack200.xyron.Xchange.AddPlayerRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.github.blackjack200.xyron.Xchange.AddPlayerRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.player_ = playerBuilder_ == null
              ? player_
              : playerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.data_ = internalGetData();
          result.data_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.blackjack200.xyron.Xchange.AddPlayerRequest) {
          return mergeFrom((com.github.blackjack200.xyron.Xchange.AddPlayerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.blackjack200.xyron.Xchange.AddPlayerRequest other) {
        if (other == com.github.blackjack200.xyron.Xchange.AddPlayerRequest.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        internalGetMutableData().mergeFrom(
            other.internalGetData());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPlayerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
                data__ = input.readMessage(
                    DataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableData().getMutableMap().put(
                    data__.getKey(), data__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.github.blackjack200.xyron.PlayerOuterClass.Player player_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.blackjack200.xyron.PlayerOuterClass.Player, com.github.blackjack200.xyron.PlayerOuterClass.Player.Builder, com.github.blackjack200.xyron.PlayerOuterClass.PlayerOrBuilder> playerBuilder_;
      /**
       * <code>.xchange.Player player = 1;</code>
       * @return Whether the player field is set.
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       * @return The player.
       */
      public com.github.blackjack200.xyron.PlayerOuterClass.Player getPlayer() {
        if (playerBuilder_ == null) {
          return player_ == null ? com.github.blackjack200.xyron.PlayerOuterClass.Player.getDefaultInstance() : player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       */
      public Builder setPlayer(com.github.blackjack200.xyron.PlayerOuterClass.Player value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
        } else {
          playerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       */
      public Builder setPlayer(
          com.github.blackjack200.xyron.PlayerOuterClass.Player.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       */
      public Builder mergePlayer(com.github.blackjack200.xyron.PlayerOuterClass.Player value) {
        if (playerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            player_ != null &&
            player_ != com.github.blackjack200.xyron.PlayerOuterClass.Player.getDefaultInstance()) {
            getPlayerBuilder().mergeFrom(value);
          } else {
            player_ = value;
          }
        } else {
          playerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = null;
        if (playerBuilder_ != null) {
          playerBuilder_.dispose();
          playerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       */
      public com.github.blackjack200.xyron.PlayerOuterClass.Player.Builder getPlayerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       */
      public com.github.blackjack200.xyron.PlayerOuterClass.PlayerOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_ == null ?
              com.github.blackjack200.xyron.PlayerOuterClass.Player.getDefaultInstance() : player_;
        }
      }
      /**
       * <code>.xchange.Player player = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.blackjack200.xyron.PlayerOuterClass.Player, com.github.blackjack200.xyron.PlayerOuterClass.Player.Builder, com.github.blackjack200.xyron.PlayerOuterClass.PlayerOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.blackjack200.xyron.PlayerOuterClass.Player, com.github.blackjack200.xyron.PlayerOuterClass.Player.Builder, com.github.blackjack200.xyron.PlayerOuterClass.PlayerOrBuilder>(
                  getPlayer(),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> data_;
      private com.google.protobuf.MapField<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
          internalGetData() {
        if (data_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        return data_;
      }
      private com.google.protobuf.MapField<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
          internalGetMutableData() {
        if (data_ == null) {
          data_ = com.google.protobuf.MapField.newMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        if (!data_.isMutable()) {
          data_ = data_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return data_;
      }
      public int getDataCount() {
        return internalGetData().getMap().size();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
       */
      @java.lang.Override
      public boolean containsData(
          long key) {

        return internalGetData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getData() {
        return getDataMap();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getDataMap() {
        return internalGetData().getMap();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrDefault(
          long key,
          /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData defaultValue) {

        java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
            internalGetData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
       */
      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrThrow(
          long key) {

        java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
            internalGetData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
       */
      public Builder removeData(
          long key) {

        internalGetMutableData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
          getMutableData() {
        bitField0_ |= 0x00000002;
        return internalGetMutableData().getMutableMap();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
       */
      public Builder putData(
          long key,
          com.github.blackjack200.xyron.Xchange.TimestampedReportData value) {

        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableData().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 2;</code>
       */
      public Builder putAllData(
          java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> values) {
        internalGetMutableData().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xchange.AddPlayerRequest)
    }

    // @@protoc_insertion_point(class_scope:xchange.AddPlayerRequest)
    private static final com.github.blackjack200.xyron.Xchange.AddPlayerRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.blackjack200.xyron.Xchange.AddPlayerRequest();
    }

    public static com.github.blackjack200.xyron.Xchange.AddPlayerRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddPlayerRequest>
        PARSER = new com.google.protobuf.AbstractParser<AddPlayerRequest>() {
      @java.lang.Override
      public AddPlayerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AddPlayerRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddPlayerRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.AddPlayerRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xchange.PlayerReport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xchange.PlayerReceipt player = 1;</code>
     * @return Whether the player field is set.
     */
    boolean hasPlayer();
    /**
     * <code>.xchange.PlayerReceipt player = 1;</code>
     * @return The player.
     */
    com.github.blackjack200.xyron.Xchange.PlayerReceipt getPlayer();
    /**
     * <code>.xchange.PlayerReceipt player = 1;</code>
     */
    com.github.blackjack200.xyron.Xchange.PlayerReceiptOrBuilder getPlayerOrBuilder();

    /**
     * <code>double latency = 2;</code>
     * @return The latency.
     */
    double getLatency();

    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    int getDataCount();
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    boolean containsData(
        long key);
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
    getData();
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
    getDataMap();
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrDefault(
        long key,
        /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData defaultValue);
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrThrow(
        long key);
  }
  /**
   * Protobuf type {@code xchange.PlayerReport}
   */
  public static final class PlayerReport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xchange.PlayerReport)
      PlayerReportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlayerReport.newBuilder() to construct.
    private PlayerReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerReport() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlayerReport();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReport_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.blackjack200.xyron.Xchange.PlayerReport.class, com.github.blackjack200.xyron.Xchange.PlayerReport.Builder.class);
    }

    public static final int PLAYER_FIELD_NUMBER = 1;
    private com.github.blackjack200.xyron.Xchange.PlayerReceipt player_;
    /**
     * <code>.xchange.PlayerReceipt player = 1;</code>
     * @return Whether the player field is set.
     */
    @java.lang.Override
    public boolean hasPlayer() {
      return player_ != null;
    }
    /**
     * <code>.xchange.PlayerReceipt player = 1;</code>
     * @return The player.
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.PlayerReceipt getPlayer() {
      return player_ == null ? com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance() : player_;
    }
    /**
     * <code>.xchange.PlayerReceipt player = 1;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.PlayerReceiptOrBuilder getPlayerOrBuilder() {
      return player_ == null ? com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance() : player_;
    }

    public static final int LATENCY_FIELD_NUMBER = 2;
    private double latency_ = 0D;
    /**
     * <code>double latency = 2;</code>
     * @return The latency.
     */
    @java.lang.Override
    public double getLatency() {
      return latency_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private static final class DataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>newDefaultInstance(
                  com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReport_DataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.github.blackjack200.xyron.Xchange.TimestampedReportData.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> data_;
    private com.google.protobuf.MapField<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
    internalGetData() {
      if (data_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DataDefaultEntryHolder.defaultEntry);
      }
      return data_;
    }
    public int getDataCount() {
      return internalGetData().getMap().size();
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    @java.lang.Override
    public boolean containsData(
        long key) {

      return internalGetData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getData() {
      return getDataMap();
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getDataMap() {
      return internalGetData().getMap();
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    @java.lang.Override
    public /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrDefault(
        long key,
        /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData defaultValue) {

      java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
          internalGetData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *timestamp-&gt;report data
     * </pre>
     *
     * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrThrow(
        long key) {

      java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
          internalGetData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (player_ != null) {
        output.writeMessage(1, getPlayer());
      }
      if (java.lang.Double.doubleToRawLongBits(latency_) != 0) {
        output.writeDouble(2, latency_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetData(),
          DataDefaultEntryHolder.defaultEntry,
          3);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (player_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayer());
      }
      if (java.lang.Double.doubleToRawLongBits(latency_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, latency_);
      }
      for (java.util.Map.Entry<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> entry
           : internalGetData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
        data__ = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, data__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.blackjack200.xyron.Xchange.PlayerReport)) {
        return super.equals(obj);
      }
      com.github.blackjack200.xyron.Xchange.PlayerReport other = (com.github.blackjack200.xyron.Xchange.PlayerReport) obj;

      if (hasPlayer() != other.hasPlayer()) return false;
      if (hasPlayer()) {
        if (!getPlayer()
            .equals(other.getPlayer())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getLatency())
          != java.lang.Double.doubleToLongBits(
              other.getLatency())) return false;
      if (!internalGetData().equals(
          other.internalGetData())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer().hashCode();
      }
      hash = (37 * hash) + LATENCY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLatency()));
      if (!internalGetData().getMap().isEmpty()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.PlayerReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.blackjack200.xyron.Xchange.PlayerReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xchange.PlayerReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xchange.PlayerReport)
        com.github.blackjack200.xyron.Xchange.PlayerReportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReport_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.blackjack200.xyron.Xchange.PlayerReport.class, com.github.blackjack200.xyron.Xchange.PlayerReport.Builder.class);
      }

      // Construct using com.github.blackjack200.xyron.Xchange.PlayerReport.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        player_ = null;
        if (playerBuilder_ != null) {
          playerBuilder_.dispose();
          playerBuilder_ = null;
        }
        latency_ = 0D;
        internalGetMutableData().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_PlayerReport_descriptor;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.PlayerReport getDefaultInstanceForType() {
        return com.github.blackjack200.xyron.Xchange.PlayerReport.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.PlayerReport build() {
        com.github.blackjack200.xyron.Xchange.PlayerReport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.PlayerReport buildPartial() {
        com.github.blackjack200.xyron.Xchange.PlayerReport result = new com.github.blackjack200.xyron.Xchange.PlayerReport(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.github.blackjack200.xyron.Xchange.PlayerReport result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.player_ = playerBuilder_ == null
              ? player_
              : playerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.latency_ = latency_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.data_ = internalGetData();
          result.data_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.blackjack200.xyron.Xchange.PlayerReport) {
          return mergeFrom((com.github.blackjack200.xyron.Xchange.PlayerReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.blackjack200.xyron.Xchange.PlayerReport other) {
        if (other == com.github.blackjack200.xyron.Xchange.PlayerReport.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        if (other.getLatency() != 0D) {
          setLatency(other.getLatency());
        }
        internalGetMutableData().mergeFrom(
            other.internalGetData());
        bitField0_ |= 0x00000004;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPlayerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 17: {
                latency_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 26: {
                com.google.protobuf.MapEntry<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
                data__ = input.readMessage(
                    DataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableData().getMutableMap().put(
                    data__.getKey(), data__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.github.blackjack200.xyron.Xchange.PlayerReceipt player_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.blackjack200.xyron.Xchange.PlayerReceipt, com.github.blackjack200.xyron.Xchange.PlayerReceipt.Builder, com.github.blackjack200.xyron.Xchange.PlayerReceiptOrBuilder> playerBuilder_;
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       * @return Whether the player field is set.
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       * @return The player.
       */
      public com.github.blackjack200.xyron.Xchange.PlayerReceipt getPlayer() {
        if (playerBuilder_ == null) {
          return player_ == null ? com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance() : player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       */
      public Builder setPlayer(com.github.blackjack200.xyron.Xchange.PlayerReceipt value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
        } else {
          playerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       */
      public Builder setPlayer(
          com.github.blackjack200.xyron.Xchange.PlayerReceipt.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       */
      public Builder mergePlayer(com.github.blackjack200.xyron.Xchange.PlayerReceipt value) {
        if (playerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            player_ != null &&
            player_ != com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance()) {
            getPlayerBuilder().mergeFrom(value);
          } else {
            player_ = value;
          }
        } else {
          playerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = null;
        if (playerBuilder_ != null) {
          playerBuilder_.dispose();
          playerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       */
      public com.github.blackjack200.xyron.Xchange.PlayerReceipt.Builder getPlayerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       */
      public com.github.blackjack200.xyron.Xchange.PlayerReceiptOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_ == null ?
              com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance() : player_;
        }
      }
      /**
       * <code>.xchange.PlayerReceipt player = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.blackjack200.xyron.Xchange.PlayerReceipt, com.github.blackjack200.xyron.Xchange.PlayerReceipt.Builder, com.github.blackjack200.xyron.Xchange.PlayerReceiptOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.blackjack200.xyron.Xchange.PlayerReceipt, com.github.blackjack200.xyron.Xchange.PlayerReceipt.Builder, com.github.blackjack200.xyron.Xchange.PlayerReceiptOrBuilder>(
                  getPlayer(),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      private double latency_ ;
      /**
       * <code>double latency = 2;</code>
       * @return The latency.
       */
      @java.lang.Override
      public double getLatency() {
        return latency_;
      }
      /**
       * <code>double latency = 2;</code>
       * @param value The latency to set.
       * @return This builder for chaining.
       */
      public Builder setLatency(double value) {

        latency_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double latency = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatency() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latency_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> data_;
      private com.google.protobuf.MapField<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
          internalGetData() {
        if (data_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        return data_;
      }
      private com.google.protobuf.MapField<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
          internalGetMutableData() {
        if (data_ == null) {
          data_ = com.google.protobuf.MapField.newMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        if (!data_.isMutable()) {
          data_ = data_.copy();
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return data_;
      }
      public int getDataCount() {
        return internalGetData().getMap().size();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
       */
      @java.lang.Override
      public boolean containsData(
          long key) {

        return internalGetData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getData() {
        return getDataMap();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> getDataMap() {
        return internalGetData().getMap();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
       */
      @java.lang.Override
      public /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrDefault(
          long key,
          /* nullable */
com.github.blackjack200.xyron.Xchange.TimestampedReportData defaultValue) {

        java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
            internalGetData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
       */
      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.TimestampedReportData getDataOrThrow(
          long key) {

        java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> map =
            internalGetData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
       */
      public Builder removeData(
          long key) {

        internalGetMutableData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData>
          getMutableData() {
        bitField0_ |= 0x00000004;
        return internalGetMutableData().getMutableMap();
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
       */
      public Builder putData(
          long key,
          com.github.blackjack200.xyron.Xchange.TimestampedReportData value) {

        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableData().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       *timestamp-&gt;report data
       * </pre>
       *
       * <code>map&lt;int64, .xchange.TimestampedReportData&gt; data = 3;</code>
       */
      public Builder putAllData(
          java.util.Map<java.lang.Long, com.github.blackjack200.xyron.Xchange.TimestampedReportData> values) {
        internalGetMutableData().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000004;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xchange.PlayerReport)
    }

    // @@protoc_insertion_point(class_scope:xchange.PlayerReport)
    private static final com.github.blackjack200.xyron.Xchange.PlayerReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.blackjack200.xyron.Xchange.PlayerReport();
    }

    public static com.github.blackjack200.xyron.Xchange.PlayerReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerReport>
        PARSER = new com.google.protobuf.AbstractParser<PlayerReport>() {
      @java.lang.Override
      public PlayerReport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PlayerReport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerReport> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.PlayerReport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JudgementDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xchange.JudgementData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string type = 1;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>.xchange.Judgement judgement = 2;</code>
     * @return The enum numeric value on the wire for judgement.
     */
    int getJudgementValue();
    /**
     * <code>.xchange.Judgement judgement = 2;</code>
     * @return The judgement.
     */
    com.github.blackjack200.xyron.AnticheatTypes.Judgement getJudgement();

    /**
     * <code>string message = 3;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 3;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    java.util.List<com.github.blackjack200.xyron.Xchange.ServerExecution> 
        getExtraExecutionsList();
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    com.github.blackjack200.xyron.Xchange.ServerExecution getExtraExecutions(int index);
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    int getExtraExecutionsCount();
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    java.util.List<? extends com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder> 
        getExtraExecutionsOrBuilderList();
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder getExtraExecutionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code xchange.JudgementData}
   */
  public static final class JudgementData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xchange.JudgementData)
      JudgementDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JudgementData.newBuilder() to construct.
    private JudgementData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JudgementData() {
      type_ = "";
      judgement_ = 0;
      message_ = "";
      extraExecutions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JudgementData();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_JudgementData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_JudgementData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.blackjack200.xyron.Xchange.JudgementData.class, com.github.blackjack200.xyron.Xchange.JudgementData.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object type_ = "";
    /**
     * <code>string type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JUDGEMENT_FIELD_NUMBER = 2;
    private int judgement_ = 0;
    /**
     * <code>.xchange.Judgement judgement = 2;</code>
     * @return The enum numeric value on the wire for judgement.
     */
    @java.lang.Override public int getJudgementValue() {
      return judgement_;
    }
    /**
     * <code>.xchange.Judgement judgement = 2;</code>
     * @return The judgement.
     */
    @java.lang.Override public com.github.blackjack200.xyron.AnticheatTypes.Judgement getJudgement() {
      com.github.blackjack200.xyron.AnticheatTypes.Judgement result = com.github.blackjack200.xyron.AnticheatTypes.Judgement.forNumber(judgement_);
      return result == null ? com.github.blackjack200.xyron.AnticheatTypes.Judgement.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object message_ = "";
    /**
     * <code>string message = 3;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 3;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTRAEXECUTIONS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<com.github.blackjack200.xyron.Xchange.ServerExecution> extraExecutions_;
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.github.blackjack200.xyron.Xchange.ServerExecution> getExtraExecutionsList() {
      return extraExecutions_;
    }
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder> 
        getExtraExecutionsOrBuilderList() {
      return extraExecutions_;
    }
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    @java.lang.Override
    public int getExtraExecutionsCount() {
      return extraExecutions_.size();
    }
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.ServerExecution getExtraExecutions(int index) {
      return extraExecutions_.get(index);
    }
    /**
     * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder getExtraExecutionsOrBuilder(
        int index) {
      return extraExecutions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (judgement_ != com.github.blackjack200.xyron.AnticheatTypes.Judgement.DEBUG.getNumber()) {
        output.writeEnum(2, judgement_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, message_);
      }
      for (int i = 0; i < extraExecutions_.size(); i++) {
        output.writeMessage(4, extraExecutions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (judgement_ != com.github.blackjack200.xyron.AnticheatTypes.Judgement.DEBUG.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, judgement_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, message_);
      }
      for (int i = 0; i < extraExecutions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, extraExecutions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.blackjack200.xyron.Xchange.JudgementData)) {
        return super.equals(obj);
      }
      com.github.blackjack200.xyron.Xchange.JudgementData other = (com.github.blackjack200.xyron.Xchange.JudgementData) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (judgement_ != other.judgement_) return false;
      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (!getExtraExecutionsList()
          .equals(other.getExtraExecutionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + JUDGEMENT_FIELD_NUMBER;
      hash = (53 * hash) + judgement_;
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      if (getExtraExecutionsCount() > 0) {
        hash = (37 * hash) + EXTRAEXECUTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getExtraExecutionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.blackjack200.xyron.Xchange.JudgementData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.blackjack200.xyron.Xchange.JudgementData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.JudgementData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.blackjack200.xyron.Xchange.JudgementData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xchange.JudgementData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xchange.JudgementData)
        com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_JudgementData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_JudgementData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.blackjack200.xyron.Xchange.JudgementData.class, com.github.blackjack200.xyron.Xchange.JudgementData.Builder.class);
      }

      // Construct using com.github.blackjack200.xyron.Xchange.JudgementData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = "";
        judgement_ = 0;
        message_ = "";
        if (extraExecutionsBuilder_ == null) {
          extraExecutions_ = java.util.Collections.emptyList();
        } else {
          extraExecutions_ = null;
          extraExecutionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_JudgementData_descriptor;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.JudgementData getDefaultInstanceForType() {
        return com.github.blackjack200.xyron.Xchange.JudgementData.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.JudgementData build() {
        com.github.blackjack200.xyron.Xchange.JudgementData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.JudgementData buildPartial() {
        com.github.blackjack200.xyron.Xchange.JudgementData result = new com.github.blackjack200.xyron.Xchange.JudgementData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.github.blackjack200.xyron.Xchange.JudgementData result) {
        if (extraExecutionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            extraExecutions_ = java.util.Collections.unmodifiableList(extraExecutions_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.extraExecutions_ = extraExecutions_;
        } else {
          result.extraExecutions_ = extraExecutionsBuilder_.build();
        }
      }

      private void buildPartial0(com.github.blackjack200.xyron.Xchange.JudgementData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.judgement_ = judgement_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.message_ = message_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.blackjack200.xyron.Xchange.JudgementData) {
          return mergeFrom((com.github.blackjack200.xyron.Xchange.JudgementData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.blackjack200.xyron.Xchange.JudgementData other) {
        if (other == com.github.blackjack200.xyron.Xchange.JudgementData.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.judgement_ != 0) {
          setJudgementValue(other.getJudgementValue());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (extraExecutionsBuilder_ == null) {
          if (!other.extraExecutions_.isEmpty()) {
            if (extraExecutions_.isEmpty()) {
              extraExecutions_ = other.extraExecutions_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureExtraExecutionsIsMutable();
              extraExecutions_.addAll(other.extraExecutions_);
            }
            onChanged();
          }
        } else {
          if (!other.extraExecutions_.isEmpty()) {
            if (extraExecutionsBuilder_.isEmpty()) {
              extraExecutionsBuilder_.dispose();
              extraExecutionsBuilder_ = null;
              extraExecutions_ = other.extraExecutions_;
              bitField0_ = (bitField0_ & ~0x00000008);
              extraExecutionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExtraExecutionsFieldBuilder() : null;
            } else {
              extraExecutionsBuilder_.addAllMessages(other.extraExecutions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                type_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                judgement_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                message_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                com.github.blackjack200.xyron.Xchange.ServerExecution m =
                    input.readMessage(
                        com.github.blackjack200.xyron.Xchange.ServerExecution.parser(),
                        extensionRegistry);
                if (extraExecutionsBuilder_ == null) {
                  ensureExtraExecutionsIsMutable();
                  extraExecutions_.add(m);
                } else {
                  extraExecutionsBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <code>string type = 1;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        type_ = getDefaultInstance().getType();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int judgement_ = 0;
      /**
       * <code>.xchange.Judgement judgement = 2;</code>
       * @return The enum numeric value on the wire for judgement.
       */
      @java.lang.Override public int getJudgementValue() {
        return judgement_;
      }
      /**
       * <code>.xchange.Judgement judgement = 2;</code>
       * @param value The enum numeric value on the wire for judgement to set.
       * @return This builder for chaining.
       */
      public Builder setJudgementValue(int value) {
        judgement_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.Judgement judgement = 2;</code>
       * @return The judgement.
       */
      @java.lang.Override
      public com.github.blackjack200.xyron.AnticheatTypes.Judgement getJudgement() {
        com.github.blackjack200.xyron.AnticheatTypes.Judgement result = com.github.blackjack200.xyron.AnticheatTypes.Judgement.forNumber(judgement_);
        return result == null ? com.github.blackjack200.xyron.AnticheatTypes.Judgement.UNRECOGNIZED : result;
      }
      /**
       * <code>.xchange.Judgement judgement = 2;</code>
       * @param value The judgement to set.
       * @return This builder for chaining.
       */
      public Builder setJudgement(com.github.blackjack200.xyron.AnticheatTypes.Judgement value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        judgement_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.xchange.Judgement judgement = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearJudgement() {
        bitField0_ = (bitField0_ & ~0x00000002);
        judgement_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 3;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 3;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 3;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        message_ = getDefaultInstance().getMessage();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string message = 3;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        message_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.util.List<com.github.blackjack200.xyron.Xchange.ServerExecution> extraExecutions_ =
        java.util.Collections.emptyList();
      private void ensureExtraExecutionsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          extraExecutions_ = new java.util.ArrayList<com.github.blackjack200.xyron.Xchange.ServerExecution>(extraExecutions_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.blackjack200.xyron.Xchange.ServerExecution, com.github.blackjack200.xyron.Xchange.ServerExecution.Builder, com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder> extraExecutionsBuilder_;

      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public java.util.List<com.github.blackjack200.xyron.Xchange.ServerExecution> getExtraExecutionsList() {
        if (extraExecutionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extraExecutions_);
        } else {
          return extraExecutionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public int getExtraExecutionsCount() {
        if (extraExecutionsBuilder_ == null) {
          return extraExecutions_.size();
        } else {
          return extraExecutionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public com.github.blackjack200.xyron.Xchange.ServerExecution getExtraExecutions(int index) {
        if (extraExecutionsBuilder_ == null) {
          return extraExecutions_.get(index);
        } else {
          return extraExecutionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder setExtraExecutions(
          int index, com.github.blackjack200.xyron.Xchange.ServerExecution value) {
        if (extraExecutionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraExecutionsIsMutable();
          extraExecutions_.set(index, value);
          onChanged();
        } else {
          extraExecutionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder setExtraExecutions(
          int index, com.github.blackjack200.xyron.Xchange.ServerExecution.Builder builderForValue) {
        if (extraExecutionsBuilder_ == null) {
          ensureExtraExecutionsIsMutable();
          extraExecutions_.set(index, builderForValue.build());
          onChanged();
        } else {
          extraExecutionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder addExtraExecutions(com.github.blackjack200.xyron.Xchange.ServerExecution value) {
        if (extraExecutionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraExecutionsIsMutable();
          extraExecutions_.add(value);
          onChanged();
        } else {
          extraExecutionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder addExtraExecutions(
          int index, com.github.blackjack200.xyron.Xchange.ServerExecution value) {
        if (extraExecutionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraExecutionsIsMutable();
          extraExecutions_.add(index, value);
          onChanged();
        } else {
          extraExecutionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder addExtraExecutions(
          com.github.blackjack200.xyron.Xchange.ServerExecution.Builder builderForValue) {
        if (extraExecutionsBuilder_ == null) {
          ensureExtraExecutionsIsMutable();
          extraExecutions_.add(builderForValue.build());
          onChanged();
        } else {
          extraExecutionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder addExtraExecutions(
          int index, com.github.blackjack200.xyron.Xchange.ServerExecution.Builder builderForValue) {
        if (extraExecutionsBuilder_ == null) {
          ensureExtraExecutionsIsMutable();
          extraExecutions_.add(index, builderForValue.build());
          onChanged();
        } else {
          extraExecutionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder addAllExtraExecutions(
          java.lang.Iterable<? extends com.github.blackjack200.xyron.Xchange.ServerExecution> values) {
        if (extraExecutionsBuilder_ == null) {
          ensureExtraExecutionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extraExecutions_);
          onChanged();
        } else {
          extraExecutionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder clearExtraExecutions() {
        if (extraExecutionsBuilder_ == null) {
          extraExecutions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          extraExecutionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public Builder removeExtraExecutions(int index) {
        if (extraExecutionsBuilder_ == null) {
          ensureExtraExecutionsIsMutable();
          extraExecutions_.remove(index);
          onChanged();
        } else {
          extraExecutionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public com.github.blackjack200.xyron.Xchange.ServerExecution.Builder getExtraExecutionsBuilder(
          int index) {
        return getExtraExecutionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder getExtraExecutionsOrBuilder(
          int index) {
        if (extraExecutionsBuilder_ == null) {
          return extraExecutions_.get(index);  } else {
          return extraExecutionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public java.util.List<? extends com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder> 
           getExtraExecutionsOrBuilderList() {
        if (extraExecutionsBuilder_ != null) {
          return extraExecutionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extraExecutions_);
        }
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public com.github.blackjack200.xyron.Xchange.ServerExecution.Builder addExtraExecutionsBuilder() {
        return getExtraExecutionsFieldBuilder().addBuilder(
            com.github.blackjack200.xyron.Xchange.ServerExecution.getDefaultInstance());
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public com.github.blackjack200.xyron.Xchange.ServerExecution.Builder addExtraExecutionsBuilder(
          int index) {
        return getExtraExecutionsFieldBuilder().addBuilder(
            index, com.github.blackjack200.xyron.Xchange.ServerExecution.getDefaultInstance());
      }
      /**
       * <code>repeated .xchange.ServerExecution extraExecutions = 4;</code>
       */
      public java.util.List<com.github.blackjack200.xyron.Xchange.ServerExecution.Builder> 
           getExtraExecutionsBuilderList() {
        return getExtraExecutionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.blackjack200.xyron.Xchange.ServerExecution, com.github.blackjack200.xyron.Xchange.ServerExecution.Builder, com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder> 
          getExtraExecutionsFieldBuilder() {
        if (extraExecutionsBuilder_ == null) {
          extraExecutionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.blackjack200.xyron.Xchange.ServerExecution, com.github.blackjack200.xyron.Xchange.ServerExecution.Builder, com.github.blackjack200.xyron.Xchange.ServerExecutionOrBuilder>(
                  extraExecutions_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          extraExecutions_ = null;
        }
        return extraExecutionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xchange.JudgementData)
    }

    // @@protoc_insertion_point(class_scope:xchange.JudgementData)
    private static final com.github.blackjack200.xyron.Xchange.JudgementData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.blackjack200.xyron.Xchange.JudgementData();
    }

    public static com.github.blackjack200.xyron.Xchange.JudgementData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JudgementData>
        PARSER = new com.google.protobuf.AbstractParser<JudgementData>() {
      @java.lang.Override
      public JudgementData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<JudgementData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JudgementData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.JudgementData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xchange.ReportResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    java.util.List<com.github.blackjack200.xyron.Xchange.JudgementData> 
        getJudgementsList();
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    com.github.blackjack200.xyron.Xchange.JudgementData getJudgements(int index);
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    int getJudgementsCount();
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    java.util.List<? extends com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder> 
        getJudgementsOrBuilderList();
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder getJudgementsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code xchange.ReportResponse}
   */
  public static final class ReportResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xchange.ReportResponse)
      ReportResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReportResponse.newBuilder() to construct.
    private ReportResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportResponse() {
      judgements_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReportResponse();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ReportResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ReportResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.blackjack200.xyron.Xchange.ReportResponse.class, com.github.blackjack200.xyron.Xchange.ReportResponse.Builder.class);
    }

    public static final int JUDGEMENTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.github.blackjack200.xyron.Xchange.JudgementData> judgements_;
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.github.blackjack200.xyron.Xchange.JudgementData> getJudgementsList() {
      return judgements_;
    }
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder> 
        getJudgementsOrBuilderList() {
      return judgements_;
    }
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    @java.lang.Override
    public int getJudgementsCount() {
      return judgements_.size();
    }
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.JudgementData getJudgements(int index) {
      return judgements_.get(index);
    }
    /**
     * <code>repeated .xchange.JudgementData judgements = 1;</code>
     */
    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder getJudgementsOrBuilder(
        int index) {
      return judgements_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < judgements_.size(); i++) {
        output.writeMessage(1, judgements_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < judgements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, judgements_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.blackjack200.xyron.Xchange.ReportResponse)) {
        return super.equals(obj);
      }
      com.github.blackjack200.xyron.Xchange.ReportResponse other = (com.github.blackjack200.xyron.Xchange.ReportResponse) obj;

      if (!getJudgementsList()
          .equals(other.getJudgementsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getJudgementsCount() > 0) {
        hash = (37 * hash) + JUDGEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getJudgementsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.blackjack200.xyron.Xchange.ReportResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.blackjack200.xyron.Xchange.ReportResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xchange.ReportResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xchange.ReportResponse)
        com.github.blackjack200.xyron.Xchange.ReportResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ReportResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ReportResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.blackjack200.xyron.Xchange.ReportResponse.class, com.github.blackjack200.xyron.Xchange.ReportResponse.Builder.class);
      }

      // Construct using com.github.blackjack200.xyron.Xchange.ReportResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (judgementsBuilder_ == null) {
          judgements_ = java.util.Collections.emptyList();
        } else {
          judgements_ = null;
          judgementsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.blackjack200.xyron.Xchange.internal_static_xchange_ReportResponse_descriptor;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.ReportResponse getDefaultInstanceForType() {
        return com.github.blackjack200.xyron.Xchange.ReportResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.ReportResponse build() {
        com.github.blackjack200.xyron.Xchange.ReportResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.blackjack200.xyron.Xchange.ReportResponse buildPartial() {
        com.github.blackjack200.xyron.Xchange.ReportResponse result = new com.github.blackjack200.xyron.Xchange.ReportResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.github.blackjack200.xyron.Xchange.ReportResponse result) {
        if (judgementsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            judgements_ = java.util.Collections.unmodifiableList(judgements_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.judgements_ = judgements_;
        } else {
          result.judgements_ = judgementsBuilder_.build();
        }
      }

      private void buildPartial0(com.github.blackjack200.xyron.Xchange.ReportResponse result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.blackjack200.xyron.Xchange.ReportResponse) {
          return mergeFrom((com.github.blackjack200.xyron.Xchange.ReportResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.blackjack200.xyron.Xchange.ReportResponse other) {
        if (other == com.github.blackjack200.xyron.Xchange.ReportResponse.getDefaultInstance()) return this;
        if (judgementsBuilder_ == null) {
          if (!other.judgements_.isEmpty()) {
            if (judgements_.isEmpty()) {
              judgements_ = other.judgements_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureJudgementsIsMutable();
              judgements_.addAll(other.judgements_);
            }
            onChanged();
          }
        } else {
          if (!other.judgements_.isEmpty()) {
            if (judgementsBuilder_.isEmpty()) {
              judgementsBuilder_.dispose();
              judgementsBuilder_ = null;
              judgements_ = other.judgements_;
              bitField0_ = (bitField0_ & ~0x00000001);
              judgementsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJudgementsFieldBuilder() : null;
            } else {
              judgementsBuilder_.addAllMessages(other.judgements_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.github.blackjack200.xyron.Xchange.JudgementData m =
                    input.readMessage(
                        com.github.blackjack200.xyron.Xchange.JudgementData.parser(),
                        extensionRegistry);
                if (judgementsBuilder_ == null) {
                  ensureJudgementsIsMutable();
                  judgements_.add(m);
                } else {
                  judgementsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.blackjack200.xyron.Xchange.JudgementData> judgements_ =
        java.util.Collections.emptyList();
      private void ensureJudgementsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          judgements_ = new java.util.ArrayList<com.github.blackjack200.xyron.Xchange.JudgementData>(judgements_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.blackjack200.xyron.Xchange.JudgementData, com.github.blackjack200.xyron.Xchange.JudgementData.Builder, com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder> judgementsBuilder_;

      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public java.util.List<com.github.blackjack200.xyron.Xchange.JudgementData> getJudgementsList() {
        if (judgementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(judgements_);
        } else {
          return judgementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public int getJudgementsCount() {
        if (judgementsBuilder_ == null) {
          return judgements_.size();
        } else {
          return judgementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public com.github.blackjack200.xyron.Xchange.JudgementData getJudgements(int index) {
        if (judgementsBuilder_ == null) {
          return judgements_.get(index);
        } else {
          return judgementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder setJudgements(
          int index, com.github.blackjack200.xyron.Xchange.JudgementData value) {
        if (judgementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJudgementsIsMutable();
          judgements_.set(index, value);
          onChanged();
        } else {
          judgementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder setJudgements(
          int index, com.github.blackjack200.xyron.Xchange.JudgementData.Builder builderForValue) {
        if (judgementsBuilder_ == null) {
          ensureJudgementsIsMutable();
          judgements_.set(index, builderForValue.build());
          onChanged();
        } else {
          judgementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder addJudgements(com.github.blackjack200.xyron.Xchange.JudgementData value) {
        if (judgementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJudgementsIsMutable();
          judgements_.add(value);
          onChanged();
        } else {
          judgementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder addJudgements(
          int index, com.github.blackjack200.xyron.Xchange.JudgementData value) {
        if (judgementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJudgementsIsMutable();
          judgements_.add(index, value);
          onChanged();
        } else {
          judgementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder addJudgements(
          com.github.blackjack200.xyron.Xchange.JudgementData.Builder builderForValue) {
        if (judgementsBuilder_ == null) {
          ensureJudgementsIsMutable();
          judgements_.add(builderForValue.build());
          onChanged();
        } else {
          judgementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder addJudgements(
          int index, com.github.blackjack200.xyron.Xchange.JudgementData.Builder builderForValue) {
        if (judgementsBuilder_ == null) {
          ensureJudgementsIsMutable();
          judgements_.add(index, builderForValue.build());
          onChanged();
        } else {
          judgementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder addAllJudgements(
          java.lang.Iterable<? extends com.github.blackjack200.xyron.Xchange.JudgementData> values) {
        if (judgementsBuilder_ == null) {
          ensureJudgementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, judgements_);
          onChanged();
        } else {
          judgementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder clearJudgements() {
        if (judgementsBuilder_ == null) {
          judgements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          judgementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public Builder removeJudgements(int index) {
        if (judgementsBuilder_ == null) {
          ensureJudgementsIsMutable();
          judgements_.remove(index);
          onChanged();
        } else {
          judgementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public com.github.blackjack200.xyron.Xchange.JudgementData.Builder getJudgementsBuilder(
          int index) {
        return getJudgementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder getJudgementsOrBuilder(
          int index) {
        if (judgementsBuilder_ == null) {
          return judgements_.get(index);  } else {
          return judgementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public java.util.List<? extends com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder> 
           getJudgementsOrBuilderList() {
        if (judgementsBuilder_ != null) {
          return judgementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(judgements_);
        }
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public com.github.blackjack200.xyron.Xchange.JudgementData.Builder addJudgementsBuilder() {
        return getJudgementsFieldBuilder().addBuilder(
            com.github.blackjack200.xyron.Xchange.JudgementData.getDefaultInstance());
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public com.github.blackjack200.xyron.Xchange.JudgementData.Builder addJudgementsBuilder(
          int index) {
        return getJudgementsFieldBuilder().addBuilder(
            index, com.github.blackjack200.xyron.Xchange.JudgementData.getDefaultInstance());
      }
      /**
       * <code>repeated .xchange.JudgementData judgements = 1;</code>
       */
      public java.util.List<com.github.blackjack200.xyron.Xchange.JudgementData.Builder> 
           getJudgementsBuilderList() {
        return getJudgementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.blackjack200.xyron.Xchange.JudgementData, com.github.blackjack200.xyron.Xchange.JudgementData.Builder, com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder> 
          getJudgementsFieldBuilder() {
        if (judgementsBuilder_ == null) {
          judgementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.blackjack200.xyron.Xchange.JudgementData, com.github.blackjack200.xyron.Xchange.JudgementData.Builder, com.github.blackjack200.xyron.Xchange.JudgementDataOrBuilder>(
                  judgements_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          judgements_ = null;
        }
        return judgementsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xchange.ReportResponse)
    }

    // @@protoc_insertion_point(class_scope:xchange.ReportResponse)
    private static final com.github.blackjack200.xyron.Xchange.ReportResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.blackjack200.xyron.Xchange.ReportResponse();
    }

    public static com.github.blackjack200.xyron.Xchange.ReportResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportResponse>
        PARSER = new com.google.protobuf.AbstractParser<ReportResponse>() {
      @java.lang.Override
      public ReportResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ReportResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReportResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.blackjack200.xyron.Xchange.ReportResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  /**
   * Protobuf service {@code xchange.Anticheat}
   */
  public static abstract class Anticheat
      implements com.google.protobuf.Service {
    protected Anticheat() {}

    public interface Interface {
      /**
       * <code>rpc AddPlayer(.xchange.AddPlayerRequest) returns (.xchange.PlayerReceipt);</code>
       */
      public abstract void addPlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.AddPlayerRequest request,
          com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.PlayerReceipt> done);

      /**
       * <code>rpc RemovePlayer(.xchange.PlayerReceipt) returns (.google.protobuf.Empty);</code>
       */
      public abstract void removePlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReceipt request,
          com.google.protobuf.RpcCallback<com.google.protobuf.Empty> done);

      /**
       * <code>rpc Report(.xchange.PlayerReport) returns (.xchange.ReportResponse);</code>
       */
      public abstract void report(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReport request,
          com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.ReportResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new Anticheat() {
        @java.lang.Override
        public  void addPlayer(
            com.google.protobuf.RpcController controller,
            com.github.blackjack200.xyron.Xchange.AddPlayerRequest request,
            com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.PlayerReceipt> done) {
          impl.addPlayer(controller, request, done);
        }

        @java.lang.Override
        public  void removePlayer(
            com.google.protobuf.RpcController controller,
            com.github.blackjack200.xyron.Xchange.PlayerReceipt request,
            com.google.protobuf.RpcCallback<com.google.protobuf.Empty> done) {
          impl.removePlayer(controller, request, done);
        }

        @java.lang.Override
        public  void report(
            com.google.protobuf.RpcController controller,
            com.github.blackjack200.xyron.Xchange.PlayerReport request,
            com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.ReportResponse> done) {
          impl.report(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.addPlayer(controller, (com.github.blackjack200.xyron.Xchange.AddPlayerRequest)request);
            case 1:
              return impl.removePlayer(controller, (com.github.blackjack200.xyron.Xchange.PlayerReceipt)request);
            case 2:
              return impl.report(controller, (com.github.blackjack200.xyron.Xchange.PlayerReport)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.github.blackjack200.xyron.Xchange.AddPlayerRequest.getDefaultInstance();
            case 1:
              return com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance();
            case 2:
              return com.github.blackjack200.xyron.Xchange.PlayerReport.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance();
            case 1:
              return com.google.protobuf.Empty.getDefaultInstance();
            case 2:
              return com.github.blackjack200.xyron.Xchange.ReportResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc AddPlayer(.xchange.AddPlayerRequest) returns (.xchange.PlayerReceipt);</code>
     */
    public abstract void addPlayer(
        com.google.protobuf.RpcController controller,
        com.github.blackjack200.xyron.Xchange.AddPlayerRequest request,
        com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.PlayerReceipt> done);

    /**
     * <code>rpc RemovePlayer(.xchange.PlayerReceipt) returns (.google.protobuf.Empty);</code>
     */
    public abstract void removePlayer(
        com.google.protobuf.RpcController controller,
        com.github.blackjack200.xyron.Xchange.PlayerReceipt request,
        com.google.protobuf.RpcCallback<com.google.protobuf.Empty> done);

    /**
     * <code>rpc Report(.xchange.PlayerReport) returns (.xchange.ReportResponse);</code>
     */
    public abstract void report(
        com.google.protobuf.RpcController controller,
        com.github.blackjack200.xyron.Xchange.PlayerReport request,
        com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.ReportResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.github.blackjack200.xyron.Xchange.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.addPlayer(controller, (com.github.blackjack200.xyron.Xchange.AddPlayerRequest)request,
            com.google.protobuf.RpcUtil.<com.github.blackjack200.xyron.Xchange.PlayerReceipt>specializeCallback(
              done));
          return;
        case 1:
          this.removePlayer(controller, (com.github.blackjack200.xyron.Xchange.PlayerReceipt)request,
            com.google.protobuf.RpcUtil.<com.google.protobuf.Empty>specializeCallback(
              done));
          return;
        case 2:
          this.report(controller, (com.github.blackjack200.xyron.Xchange.PlayerReport)request,
            com.google.protobuf.RpcUtil.<com.github.blackjack200.xyron.Xchange.ReportResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.github.blackjack200.xyron.Xchange.AddPlayerRequest.getDefaultInstance();
        case 1:
          return com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance();
        case 2:
          return com.github.blackjack200.xyron.Xchange.PlayerReport.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance();
        case 1:
          return com.google.protobuf.Empty.getDefaultInstance();
        case 2:
          return com.github.blackjack200.xyron.Xchange.ReportResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends com.github.blackjack200.xyron.Xchange.Anticheat implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void addPlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.AddPlayerRequest request,
          com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.PlayerReceipt> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.github.blackjack200.xyron.Xchange.PlayerReceipt.class,
            com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance()));
      }

      public  void removePlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReceipt request,
          com.google.protobuf.RpcCallback<com.google.protobuf.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.google.protobuf.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.google.protobuf.Empty.class,
            com.google.protobuf.Empty.getDefaultInstance()));
      }

      public  void report(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReport request,
          com.google.protobuf.RpcCallback<com.github.blackjack200.xyron.Xchange.ReportResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.github.blackjack200.xyron.Xchange.ReportResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.github.blackjack200.xyron.Xchange.ReportResponse.class,
            com.github.blackjack200.xyron.Xchange.ReportResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public com.github.blackjack200.xyron.Xchange.PlayerReceipt addPlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.AddPlayerRequest request)
          throws com.google.protobuf.ServiceException;

      public com.google.protobuf.Empty removePlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReceipt request)
          throws com.google.protobuf.ServiceException;

      public com.github.blackjack200.xyron.Xchange.ReportResponse report(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReport request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public com.github.blackjack200.xyron.Xchange.PlayerReceipt addPlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.AddPlayerRequest request)
          throws com.google.protobuf.ServiceException {
        return (com.github.blackjack200.xyron.Xchange.PlayerReceipt) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.github.blackjack200.xyron.Xchange.PlayerReceipt.getDefaultInstance());
      }


      public com.google.protobuf.Empty removePlayer(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReceipt request)
          throws com.google.protobuf.ServiceException {
        return (com.google.protobuf.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.google.protobuf.Empty.getDefaultInstance());
      }


      public com.github.blackjack200.xyron.Xchange.ReportResponse report(
          com.google.protobuf.RpcController controller,
          com.github.blackjack200.xyron.Xchange.PlayerReport request)
          throws com.google.protobuf.ServiceException {
        return (com.github.blackjack200.xyron.Xchange.ReportResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.github.blackjack200.xyron.Xchange.ReportResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:xchange.Anticheat)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_PlayerReceipt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_PlayerReceipt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_TimestampedReportData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_TimestampedReportData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_ServerExecution_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_ServerExecution_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_AddPlayerRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_AddPlayerRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_AddPlayerRequest_DataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_AddPlayerRequest_DataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_PlayerReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_PlayerReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_PlayerReport_DataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_PlayerReport_DataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_JudgementData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_JudgementData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xchange_ReportResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xchange_ReportResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rxchange.proto\022\007xchange\032\033google/protobu" +
      "f/empty.proto\032\025player_wrappers.proto\032\014pl" +
      "ayer.proto\032\025anticheat_types.proto\"#\n\rPla" +
      "yerReceipt\022\022\n\ninternalId\030\001 \001(\t\"B\n\025Timest" +
      "ampedReportData\022)\n\004data\030\001 \003(\0132\033.xchange." +
      "WildcardReportData\"2\n\017ServerExecution\022\014\n" +
      "\004type\030\001 \001(\t\022\021\n\textraData\030\002 \001(\t\"\263\001\n\020AddPl" +
      "ayerRequest\022\037\n\006player\030\001 \001(\0132\017.xchange.Pl" +
      "ayer\0221\n\004data\030\002 \003(\0132#.xchange.AddPlayerRe" +
      "quest.DataEntry\032K\n\tDataEntry\022\013\n\003key\030\001 \001(" +
      "\003\022-\n\005value\030\002 \001(\0132\036.xchange.TimestampedRe" +
      "portData:\0028\001\"\303\001\n\014PlayerReport\022&\n\006player\030" +
      "\001 \001(\0132\026.xchange.PlayerReceipt\022\017\n\007latency" +
      "\030\002 \001(\001\022-\n\004data\030\003 \003(\0132\037.xchange.PlayerRep" +
      "ort.DataEntry\032K\n\tDataEntry\022\013\n\003key\030\001 \001(\003\022" +
      "-\n\005value\030\002 \001(\0132\036.xchange.TimestampedRepo" +
      "rtData:\0028\001\"\210\001\n\rJudgementData\022\014\n\004type\030\001 \001" +
      "(\t\022%\n\tjudgement\030\002 \001(\0162\022.xchange.Judgemen" +
      "t\022\017\n\007message\030\003 \001(\t\0221\n\017extraExecutions\030\004 " +
      "\003(\0132\030.xchange.ServerExecution\"<\n\016ReportR" +
      "esponse\022*\n\njudgements\030\001 \003(\0132\026.xchange.Ju" +
      "dgementData2\313\001\n\tAnticheat\022@\n\tAddPlayer\022\031" +
      ".xchange.AddPlayerRequest\032\026.xchange.Play" +
      "erReceipt\"\000\022@\n\014RemovePlayer\022\026.xchange.Pl" +
      "ayerReceipt\032\026.google.protobuf.Empty\"\000\022:\n" +
      "\006Report\022\025.xchange.PlayerReport\032\027.xchange" +
      ".ReportResponse\"\000B=\n\035com.github.blackjac" +
      "k200.xyronZ\006xyron/\210\001\001\312\002\rprokits\\xyron\320\002\001" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.github.blackjack200.xyron.PlayerWrappers.getDescriptor(),
          com.github.blackjack200.xyron.PlayerOuterClass.getDescriptor(),
          com.github.blackjack200.xyron.AnticheatTypes.getDescriptor(),
        });
    internal_static_xchange_PlayerReceipt_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_xchange_PlayerReceipt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_PlayerReceipt_descriptor,
        new java.lang.String[] { "InternalId", });
    internal_static_xchange_TimestampedReportData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_xchange_TimestampedReportData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_TimestampedReportData_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_xchange_ServerExecution_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_xchange_ServerExecution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_ServerExecution_descriptor,
        new java.lang.String[] { "Type", "ExtraData", });
    internal_static_xchange_AddPlayerRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_xchange_AddPlayerRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_AddPlayerRequest_descriptor,
        new java.lang.String[] { "Player", "Data", });
    internal_static_xchange_AddPlayerRequest_DataEntry_descriptor =
      internal_static_xchange_AddPlayerRequest_descriptor.getNestedTypes().get(0);
    internal_static_xchange_AddPlayerRequest_DataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_AddPlayerRequest_DataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_xchange_PlayerReport_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_xchange_PlayerReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_PlayerReport_descriptor,
        new java.lang.String[] { "Player", "Latency", "Data", });
    internal_static_xchange_PlayerReport_DataEntry_descriptor =
      internal_static_xchange_PlayerReport_descriptor.getNestedTypes().get(0);
    internal_static_xchange_PlayerReport_DataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_PlayerReport_DataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_xchange_JudgementData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_xchange_JudgementData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_JudgementData_descriptor,
        new java.lang.String[] { "Type", "Judgement", "Message", "ExtraExecutions", });
    internal_static_xchange_ReportResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_xchange_ReportResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xchange_ReportResponse_descriptor,
        new java.lang.String[] { "Judgements", });
    com.google.protobuf.EmptyProto.getDescriptor();
    com.github.blackjack200.xyron.PlayerWrappers.getDescriptor();
    com.github.blackjack200.xyron.PlayerOuterClass.getDescriptor();
    com.github.blackjack200.xyron.AnticheatTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
